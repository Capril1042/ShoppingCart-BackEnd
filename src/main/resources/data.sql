-- insert into shopping.supplier( suppliername)
-- values( "Rainbow Supplies"),
--       ("Supplies Are Us"),
--       ("Random Supplies");
--
-- insert into shopping.product (productdescription, productimage, productname, productprice)
-- values("something to hold your coffee", "urlcup", "Coffee Mug", 5.79),
--       ("to wear", "url.shirt", "T-Shirt", 10.99),
--       ("glass-cleaner", "url.windex", "Windex", 3.88);
--
-- insert into shopping.productsuppliers
-- values(1,3),
--       (1,1),
--       (2,3),
--       (2,1),
--       (3,2),
--       (3,3);
--
-- insert into shopping.customer
-- values(222, "567 Apple Rd", "molly@email.com", "Molly", "857-483-9483", "VISA", "567 Apple Rd"),
--       (333, "938 Dear Ave", "gina@email.com", "Gina", "483-393-8475", "MasterCard", "9484 Morrow st");
--
-- insert into shopping.cart (cartname,custid)
-- values("Ginas Cart", 333),
--       ("Molly's Cart", 222);
--
-- insert into shopping.orders
-- values (690, true, "02/23/2019", 333);
--
-- insert into shopping.item (itemid,bought,incart,productid)
-- values (400, false, false, 3),
--        (401, false, false, 3),
--        (502, false, false, 2),
--        (700, false, false, 1);
--
-- insert into shopping.item (itemid,bought,incart,cartid, productid)
-- values (420, false, true, 2, 3),
--        (730, false, true, 2, 1);
--
--
-- insert into shopping.item (itemid,bought,incart,cartid, orderid, productid)
-- values (539, true,false, 2, 690, 2);



-- CREATE TABLE `user` (
--                       `id` int(11) NOT NULL AUTO_INCREMENT,
--                       `username` varchar(256) NOT NULL,
--                       `password` char(60) NOT NULL,
--                       `role` varchar(256) NOT NULL,
--                       PRIMARY KEY (`id`),
--                       UNIQUE KEY `username_UNIQUE` (`username`)
-- )
--
-- insert into user (user.username, user.password, user.role)
-- values("sally", "password", "user"),
--       ("charlie", "password", "user"),
--       ("linus", "password", "user"),
--       ("lucy", "ILuvM4th!", "ADMIN")
--
--   have not gotten this to work in the REST client in IntelliJ. For those of you who know Postman, you might want to try that. For the rest of us, terminal curls are working for me. So for my code currently in GitHub,
--
--   Go to a terminal prompt and enter:
--
--   curl -X POST --user 'lambda-client:password' -d 'grant_type=password&username=lucy&password=ILuvM4th!' http://localhost:2019/oauth/token
--
--   You will get a response like:
--   {"access_token":"35a8038b-d7c4-4427-9db6-3030bd4ac887","token_type":"bearer","refresh_token":"8a264489-b048-4990-86b6-24e4d894b752","expires_in":3364,"scope":"read write trust"}
--
--   Copy the access code - in this case 35a8038b-d7c4-4427-9db6-3030bd4ac887 it will vary over time.
--
--   Now run (putting the right access in place of mine!):
--
--   curl -i -H "Accept: application/json" -H "Authorization: Bearer 35a8038b-d7c4-4427-9db6-3030bd4ac887" -X GET http://localhost:2019/users/user
--   Collapse